# region Общие сцены


def mistake():
    text = (
        "Прошу прощения, в навыке возникла непредвиденная ошибка.\n"
        "Мы её обязательно исправим. Возвращайтесь чуть позже."
    )

    tts = (
        "<speaker audio='alice-sounds-game-loss-3.opus'>",
        "Прошу прощения, в навыке возникла непредвиденная ошибка.",
        "sil<[200]> Мы её обязательно исправим. Возвращайтесь чуть позже.",
    )

    return text, tts


def goodbye():
    text = "Возвращайтесь в любое время. До свидания!"
    tts = "<speaker audio='alice-sounds-game-loss-3.opus'>" + text
    return text, tts


def sorry_and_goodbye():
    text = (
        "Прошу прощения, я очень стараюсь вас понять.\n"
        "Но пока не получается. Возможно, мне стоит отдохнуть. Возвращайтесь позже.\n"
        "До свидания!"
    )

    tts = (
        "<speaker audio='alice-sounds-game-loss-3.opus'>",
        "Прошу прощения, я очень стараюсь вас понять.",
        "sil<[200]>Но пока не получается. Возможно, мне стоит отдохнуть. Возвращайтесь позже.",
        "До свидания!",
    )

    return text, tts


def fallback():
    text = (
        "Извините, я вас не поняла. Пожалуйста, повторите.\n"
        'Скажите "Помощь", чтобы узнать как работает навык.'
    )
    tts = (
        "Извините, я вас не поняла. Пожалуйста, повторите.\n"
        "sil<[100]>"
        "Скажите Помощь, чтобы узнать как работает навык."
    )

    return text, tts


# endregion


def need_auth(scene_id):
    if scene_id == "Welcome":
        text = (
            "Привет! Это цифровой дневник для Санкт-Петербурга.\n"
            "Я могу подсказать расписание уроков на любой день.\n"
            "Но для начала нужно выполнить авторизацию."
        )
        tts = (
            "Привет! Это цифровой дневник для школьников из города Санкт-Петербурга."
            "Я могу подсказать расписание уроков на любой день."
            "Скажите sil<[100]>Что ты умеешь? и расскажу подробнее."
        )

    return text, tts


# region Меню помощь


def help_menu_start():
    text = (
        "С помощью этого навыка вы сможете узнать расписание в школе.\n"
        "Чтобы узнать расписание скажите:\n"
        '"Подскажи расписание?"\n'
        "Или, если хотите на определенный день:\n"
        '"Какие уроки во вторник?"\n'
        "Если есть несколько учеников, добавьте имя:\n"
        '"Какое расписание у Миши послезавтра?"\n'
        "Теперь вы знаете как узнать расписание учеников."
        "Хотите расскажу о моих специальных возможностях?"
    )

    tts = (
        "С помощью этого навыка вы сможете узнать расписание в школе.\n"
        "Чтобы узнать расписание скажите:\n"
        'sil<[100]>"Подскажи расписание?"\n'
        "Или, если хотите на определенный день:\n"
        'sil<[100]>"Какие уроки во вторник?"\n'
        "Если есть несколько учеников, добавьте имя:\n"
        'sil<[100]>"Какое расписание у Миши послезавтра?"\n'
        "Теперь вы знаете как узнать расписание учеников."
        "Хотите расскажу о моих специальных возможностях?"
    )

    return text, tts


def help_menu_spec():
    text = (
        "У меня есть несколько режимов запуска:\n"
        "Можете сказать:\n"
        '"Алиса, запусти навык Дневник ученика Питера"\n'
        "И попадете в это приложение:\n"
        "А можете сказать:\n"
        '"Алиса, спроси у Дневника ученика Питера какие уроки завтра?"\n'
        "Тогда я сразу отвечу на ваш вопрос.\n"
        "Теперь вы знаете как пользоваться навыком. \n"
    )
    tts = (
        "У меня есть несколько режимов запуска:\n"
        "Можете сказать:\n"
        'sil<[100]>"Алиса, запусти навык Дневник ученика Питера"\n'
        "И попадете в это приложение:\n"
        "А можете сказать:\n"
        'sil<[100]>"Алиса, спроси у Дневника ученика Питера какие уроки завтра?"\n'
        "Тогда я сразу отвечу на ваш вопрос.\n"
        "Дату можете указать любую.\n"
        "Теперь вы знаете как пользоваться навыком. \n"
        'Скажите "Главное меню" или "Расписание уроков".'
    )

    return text, tts


def what_can_i_do():
    text = (
        "Этот навык помогает работать с дневником в школе.\n"
        "Я могу подсказать расписание уроков на любой день.\n"
        'Спросите, например, "Какие уроки завтра?"\n'
        "Рассказать подробнее, что я умею?"
    )

    tts = (
        "Этот навык помогает работать с дневником в школе.\n"
        "Я могу подсказать расписание уроков на любой день.\n"
        "sil<[100]>Спросите, например. Какие уроки завтра?"
        "Рассказать подробнее, что я умею?"
    )

    return text, tts

# endregion
